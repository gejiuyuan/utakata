!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).utakata=e.utakata||{})}(this,(function(e){"use strict";function t(e){return"function"==typeof e}const n=Object.create(null);function c(e){return Object(e)===e}function r(e,t){return!Object.is(e,t)}const o=(()=>{const{queueMicrotask:e,Promise:t}=globalThis||window||global||self;return e?function(t){return e(t)}:function(e){return t.resolve().then(e)}})();e.activeEffect=void 0;const a=[];class i{constructor(e,t=null){this.func=e,this.schduler=t}run(){if(!a.includes(this))try{return a.push(e.activeEffect=this),this.func()}finally{a.pop();const{length:t}=a;e.activeEffect=t>0?a[t-1]:void 0}}}var s;e.WatcherFlush=void 0,(s=e.WatcherFlush||(e.WatcherFlush={})).async="async",s.sync="sync";const f=Object.values(e.WatcherFlush),u={};const l=new WeakMap;function h(t,n){let c=l.get(t);c||l.set(t,c=new Map);let r=c.get(n);r?r.add(e.activeEffect):c.set(n,r=new Set([e.activeEffect]))}function d(e,t,n,c){const o=l.get(e);if(!o)return;const a=o.get(t);a&&r(n,c)&&Array.from(a).forEach((e=>{var t;(null===(t=e.schduler)||void 0===t?void 0:t.call(e))||e.run()}))}e.ReactiveTargetMarker=void 0,(e.ReactiveTargetMarker||(e.ReactiveTargetMarker={})).__REACTIVE__="__reactive__";const v=new WeakMap;function p(t){if(!c(t))return void console.warn("The parameter of 'reactive' must be a object!");const n=v.get(t);if(n)return n;const r=new Proxy(t,{get:g(),set:y()});return Reflect.defineProperty(r,e.ReactiveTargetMarker.__REACTIVE__,{configurable:!0,enumerable:!1,get:()=>!0}),v.set(t,r),r}function g(){return function(e,t,n){const r=Reflect.get(e,t);return h(e,t),c(r)?p(r):r}}function y(){return function(e,t,n){const c=Reflect.get(e,t);let o=!0;return r(n,c)&&(o=Reflect.set(e,t,n),d(e,t,n,c)),o}}e.EMPTY_OBJECT=n,e.ReactiveEffect=i,e.createGetter=g,e.createSetter=y,e.effect=function(e,t){e.effect&&(e=e.effect.func);const n=new i(e);t&&t.lazy||n.run();const c=n.run.bind(n);return Reflect.set(c,"effect",n),c},e.effectStack=a,e.hasChanged=r,e.isFunc=t,e.isReactive=t=>!!c(t)&&Reflect.get(t,e.ReactiveTargetMarker.__REACTIVE__),e.isReferenceType=c,e.nextTick=o,e.objEffectWeakMap=l,e.reactive=p,e.reactiveTargetMap=v,e.track=h,e.trigger=d,e.watch=function(c,a,s=n){if(!t(a))return void console.error("The second parameter of 'watch' ———— 'cb' must be a function!");const{flush:l=e.WatcherFlush.async,immediate:h=!1}=s;let d=u;const v=()=>{const e=g.run();r(e,d)&&(a.apply(null,[e,d===u?void 0:d]),d=e)};f.includes(l)||console.warn(`The 'flush' parameter value of 'watch' options should be one of the two options: ${f.join("、")}`);const p=l===e.WatcherFlush.async?()=>o(v):v,g=new i((()=>c()),p);h?p():d=g.run()},Object.defineProperty(e,"__esModule",{value:!0})}));
